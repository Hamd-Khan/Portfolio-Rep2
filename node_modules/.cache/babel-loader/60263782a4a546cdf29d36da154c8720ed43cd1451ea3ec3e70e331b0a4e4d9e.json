{"ast":null,"code":"var _jsxFileName = \"/Users/hamd/Desktop/Ensf 381 /Assignment 6 Lotion/assignment-06-lotion-Hamd-Khan/src/Main.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main(_ref) {\n  _s();\n  let {\n    activeNote,\n    onDeleteNote,\n    onUpdateNote\n  } = _ref;\n  // const [isEditing, setIsEditing] = useState(false);\n  // const [title, setTitle] = useState('');\n\n  // const quillRef = useRef(null);\n\n  const [isEditing, setIsEditing] = useState(false);\n  const [title, setTitle] = useState('');\n  const [editorChanged, setEditorChanged] = useState(false); // new state variable\n\n  const quillRef = useRef(null);\n  useEffect(() => {\n    if (activeNote) {\n      setTitle(activeNote.title);\n      setEditorChanged(false); // reset editorChanged state when a new note is selected\n    }\n  }, [activeNote]);\n  const toggleEditMode = () => {\n    setIsEditing(!isEditing);\n    if (isEditing) {\n      if (editorChanged) {\n        // check if editor content has changed before saving the note\n        saveNote();\n      }\n    }\n  };\n  const saveNote = () => {\n    const newContent = quillRef.current.getEditor().root.innerHTML;\n    const newDate = document.getElementById('date-input').value;\n    const quill = quillRef.current.getEditor();\n    const plainText = quill.getText();\n    onUpdateNote({\n      ...activeNote,\n      title: title,\n      formattedBody: newContent,\n      body: plainText,\n      dateCreated: newDate\n    });\n    setEditorChanged(false); // reset editorChanged state after saving the note\n  };\n\n  const onEditorChange = (value, delta, source, editor) => {\n    if (source === 'user') {\n      setEditorChanged(true); // set editorChanged state to true when editor content is changed by the user\n    }\n  };\n\n  useEffect(() => {\n    if (activeNote) {\n      setTitle(activeNote.title);\n    }\n  }, [activeNote]);\n\n  // const toggleEditMode = () => {\n  //   setIsEditing(!isEditing);\n  //   if (isEditing) {\n  //     saveNote();\n  //     // saveTitle();\n\n  //   }\n  // };\n  const options = {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n    second: \"numeric\"\n  };\n  const formatDate = when => {\n    const formatted = new Date(when).toLocaleString(\"en-US\", options);\n    if (formatted === \"Invalid Date\") {\n      return \"\";\n    }\n    return formatted;\n  };\n\n  // const saveNote = () => {\n  //   const newContent = quillRef.current.getEditor().root.innerHTML;\n  //   const newDate = document.getElementById('date-input').value;\n  //   const quill = quillRef.current.getEditor();\n  //   const plainText = quill.getText();\n  //   onUpdateNote({\n  //     ...activeNote,\n  //     title:title,\n  //     formattedBody: newContent,\n  //     body: plainText,\n  //     dateCreated: newDate,\n  //   });\n  // };\n\n  // const saveTitle = () => {\n\n  //   onUpdateNote({\n  //     ...activeNote,\n  //     title: title,\n  //     dateCreated: Date.now(),\n  //   });\n  // };\n\n  const onEdit = (key, value) => {\n    onUpdateNote({\n      ...activeNote,\n      [key]: value,\n      dateCreated: Date.now()\n    });\n  };\n  if (!activeNote) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"not-active-note\",\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"No Note Selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 45\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-main-note-edit\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cont-text\",\n        children: [isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left-side\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"title\",\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date-note\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input-date\",\n              id: \"date-input\",\n              type: \"datetime-local\",\n              onChange: formatDate(),\n              defaultValue: new Date(Date.now() - new Date().getTimezoneOffset() * 60000).toISOString().slice(0, -8)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 3\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left-side\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date-note\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: formatDate(activeNote.dateCreated)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-side\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"save\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: toggleEditMode,\n              children: isEditing ? 'Save' : 'Edit'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"delete\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: () => onDeleteNote(activeNote.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), isEditing ? /*#__PURE__*/_jsxDEV(ReactQuill, {\n        className: \"quill-editor\",\n        placeholder: \"Enter Your Note Here\",\n        value: activeNote.formattedBody\n        // onChange={(value) => onEdit(\"body\", value)}\n        ,\n        ref: quillRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quill-content\",\n        dangerouslySetInnerHTML: {\n          __html: activeNote.formattedBody\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"6GgIlaicdzRkcfL1F4O+BBS0axg=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useState","useRef","ReactQuill","useNavigate","jsxDEV","_jsxDEV","Main","_ref","_s","activeNote","onDeleteNote","onUpdateNote","isEditing","setIsEditing","title","setTitle","editorChanged","setEditorChanged","quillRef","toggleEditMode","saveNote","newContent","current","getEditor","root","innerHTML","newDate","document","getElementById","value","quill","plainText","getText","formattedBody","body","dateCreated","onEditorChange","delta","source","editor","options","year","month","day","hour","minute","second","formatDate","when","formatted","Date","toLocaleString","onEdit","key","now","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","e","target","autoFocus","defaultValue","getTimezoneOffset","toISOString","slice","onClick","placeholder","ref","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["/Users/hamd/Desktop/Ensf 381 /Assignment 6 Lotion/assignment-06-lotion-Hamd-Khan/src/Main.js"],"sourcesContent":["import React, { useEffect,useState ,useRef} from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport {useNavigate} from 'react-router-dom';\n\nfunction Main({ activeNote, onDeleteNote, onUpdateNote }) {\n  // const [isEditing, setIsEditing] = useState(false);\n  // const [title, setTitle] = useState('');\n\n  // const quillRef = useRef(null);\n\n  const [isEditing, setIsEditing] = useState(false);\n  const [title, setTitle] = useState('');\n  const [editorChanged, setEditorChanged] = useState(false); // new state variable\n\n  const quillRef = useRef(null);\n\n  useEffect(() => {\n    if (activeNote) {\n      setTitle(activeNote.title);\n      setEditorChanged(false); // reset editorChanged state when a new note is selected\n    }\n  }, [activeNote]);\n\n  const toggleEditMode = () => {\n    setIsEditing(!isEditing);\n    if (isEditing) {\n      if (editorChanged) { // check if editor content has changed before saving the note\n        saveNote();\n      }\n    }\n  };\n\n  const saveNote = () => {\n    const newContent = quillRef.current.getEditor().root.innerHTML;\n    const newDate = document.getElementById('date-input').value;\n    const quill = quillRef.current.getEditor();\n    const plainText = quill.getText();\n    onUpdateNote({\n      ...activeNote,\n      title: title,\n      formattedBody: newContent,\n      body: plainText,\n      dateCreated: newDate,\n    });\n    setEditorChanged(false); // reset editorChanged state after saving the note\n  };\n\n  const onEditorChange = (value, delta, source, editor) => {\n    if (source === 'user') {\n      setEditorChanged(true); // set editorChanged state to true when editor content is changed by the user\n    }\n  };\n\n  useEffect(() => {\n    if (activeNote) {\n      setTitle(activeNote.title);\n    }\n  }, [activeNote]);\n\n  // const toggleEditMode = () => {\n  //   setIsEditing(!isEditing);\n  //   if (isEditing) {\n  //     saveNote();\n  //     // saveTitle();\n    \n  //   }\n  // };\n  const options = {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n    second: \"numeric\",\n  };\n \n \n  const formatDate = (when) => {\n    const formatted = new Date(when).toLocaleString(\"en-US\", options);\n    if (formatted === \"Invalid Date\") {\n      return \"\";\n    }\n    return formatted;\n  };\n  \n\n  // const saveNote = () => {\n  //   const newContent = quillRef.current.getEditor().root.innerHTML;\n  //   const newDate = document.getElementById('date-input').value;\n  //   const quill = quillRef.current.getEditor();\n  //   const plainText = quill.getText();\n  //   onUpdateNote({\n  //     ...activeNote,\n  //     title:title,\n  //     formattedBody: newContent,\n  //     body: plainText,\n  //     dateCreated: newDate,\n  //   });\n  // };\n\n  // const saveTitle = () => {\n    \n  //   onUpdateNote({\n  //     ...activeNote,\n  //     title: title,\n  //     dateCreated: Date.now(),\n  //   });\n  // };\n\n  const onEdit = (key, value) => {\n    onUpdateNote({\n      ...activeNote,\n      [key]: value,\n      dateCreated: Date.now(),\n    });\n  };\n\n  if (!activeNote) {\n    return <div className=\"not-active-note\"><small>No Note Selected</small></div>;\n  }\n\n  return (\n    <div className=\"app-main\">\n      <div className=\"app-main-note-edit\">\n        <div className=\"cont-text\">\n        {isEditing ? (\n  <div className=\"left-side\">\n    <input\n      type=\"text\"\n      id=\"title\"\n      value={title}\n      onChange={(e) => setTitle(e.target.value)}\n      autoFocus\n    />\n    <div className=\"date-note\">\n      <input\n        className=\"input-date\"\n        id=\"date-input\"\n        type=\"datetime-local\"\n        onChange={formatDate()}\n        defaultValue={new Date(\n          Date.now() - new Date().getTimezoneOffset() * 60000\n        )\n          .toISOString()\n          .slice(0, -8)}\n      />\n    </div>\n  </div>\n) : (\n  <div className=\"left-side\">\n    <h2>{title}</h2>\n    <div className=\"date-note\">\n      <p>{formatDate(activeNote.dateCreated)}</p>\n    </div>\n  </div>\n)}\n\n          <div className=\"right-side\">\n            <div id=\"save\">\n              <p onClick={toggleEditMode}>{isEditing ? 'Save' : 'Edit'}</p>\n            </div>\n            <div id=\"delete\">\n              <p onClick={() => onDeleteNote(activeNote.id)}>Delete</p>\n            </div>\n          </div>\n        </div>\n        \n        {isEditing ? (\n          <ReactQuill\n            className=\"quill-editor\"\n            placeholder='Enter Your Note Here'\n            value={activeNote.formattedBody}\n            // onChange={(value) => onEdit(\"body\", value)}\n            ref={quillRef}\n          />\n        ) : (\n          <div className=\"quill-content\" dangerouslySetInnerHTML={{__html: activeNote.formattedBody}}></div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Main;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}