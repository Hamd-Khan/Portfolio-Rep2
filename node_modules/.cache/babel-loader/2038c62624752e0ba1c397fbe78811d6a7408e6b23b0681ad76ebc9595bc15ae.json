{"ast":null,"code":"var _jsxFileName = \"/Users/hamd/Desktop/Ensf 381 /Assignment 6 Lotion/assignment-06-lotion-Hamd-Khan/src/Main.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main(_ref) {\n  _s();\n  let {\n    activeNote,\n    onDeleteNote,\n    onUpdateNote\n  } = _ref;\n  const [isEditing, setIsEditing] = useState(false);\n  const [newTitle, setNewTitle] = useState(activeNote.title); // new state variable for the updated title\n\n  const quillRef = useRef(null);\n  const navigate = useNavigate();\n  const toggleEditMode = () => {\n    setIsEditing(!isEditing);\n    if (isEditing) {\n      saveNote();\n      saveTitle(); // save the title when the user clicks the \"Save\" button\n    }\n  };\n\n  const saveNote = () => {\n    const newContent = quillRef.current.getEditor().root.innerHTML;\n    onUpdateNote({\n      ...activeNote,\n      body: newContent,\n      dateCreated: Date.now()\n    });\n  };\n  const saveTitle = () => {\n    onUpdateNote({\n      ...activeNote,\n      title: newTitle,\n      // update the title with the new value stored in the state variable\n      dateCreated: Date.now()\n    });\n  };\n  if (!activeNote) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"not-active-note\",\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"No Note Selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 45\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n  const onEdit = (key, value) => {\n    if (key === \"title\") {\n      setNewTitle(value); // update the newTitle state variable when the user edits the title\n    } else {\n      onUpdateNote({\n        ...activeNote,\n        [key]: value,\n        dateCreated: Date.now()\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-main-note-edit\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cont-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left-side\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"title\",\n            value: newTitle // use the newTitle state variable to render the title input field\n            ,\n            onChange: e => onEdit(\"title\", e.target.value),\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date-note\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input-date\",\n              type: \"datetime-local\",\n              value: new Date(Date.now() - new Date().getTimezoneOffset() * 60000).toISOString().slice(0, -8),\n              onChange: e => onEdit(\"dateCreated\", e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-side\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"save\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: toggleEditMode,\n              children: isEditing ? 'Save' : 'Edit'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"delete\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: () => {\n                onDeleteNote(activeNote.id);\n                navigate('/');\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), isEditing ? /*#__PURE__*/_jsxDEV(ReactQuill, {\n        className: \"quill-editor\",\n        placeholder: \"Enter Your Note Here\",\n        value: activeNote.body,\n        onChange: value => onEdit(\"body\", value),\n        ref: quillRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"quill-content\",\n        children: activeNote.body && activeNote.body.replace(/<[^>]+>/g, '')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"Q6c33XYec6KxI0Jmyc6Z8rN5nr8=\", false, function () {\n  return [useNavigate];\n});\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useRef","ReactQuill","useNavigate","jsxDEV","_jsxDEV","Main","_ref","_s","activeNote","onDeleteNote","onUpdateNote","isEditing","setIsEditing","newTitle","setNewTitle","title","quillRef","navigate","toggleEditMode","saveNote","saveTitle","newContent","current","getEditor","root","innerHTML","body","dateCreated","Date","now","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onEdit","key","value","type","id","onChange","e","target","autoFocus","getTimezoneOffset","toISOString","slice","onClick","placeholder","ref","replace","_c","$RefreshReg$"],"sources":["/Users/hamd/Desktop/Ensf 381 /Assignment 6 Lotion/assignment-06-lotion-Hamd-Khan/src/Main.js"],"sourcesContent":["import React, { useState ,useRef} from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport {useNavigate} from 'react-router-dom';\n\nfunction Main({ activeNote, onDeleteNote, onUpdateNote }) {\n  const [isEditing, setIsEditing] = useState(false);\n  const [newTitle, setNewTitle] = useState(activeNote.title); // new state variable for the updated title\n  \n  const quillRef = useRef(null);\n  const navigate = useNavigate();\n\n  const toggleEditMode = () => {\n    setIsEditing(!isEditing);\n    if (isEditing) {\n      saveNote();\n      saveTitle(); // save the title when the user clicks the \"Save\" button\n    }\n  };\n\n  const saveNote = () => {\n    const newContent = quillRef.current.getEditor().root.innerHTML;\n    onUpdateNote({\n      ...activeNote,\n      body: newContent,\n      dateCreated: Date.now(),\n    });\n  };\n\n  const saveTitle = () =>{\n    onUpdateNote({\n      ...activeNote,\n      title: newTitle, // update the title with the new value stored in the state variable\n      dateCreated: Date.now(),\n    });\n  }\n\n  if (!activeNote) {\n    return <div className=\"not-active-note\"><small>No Note Selected</small></div>;\n  }\n\n  const onEdit = (key, value) => {\n    if (key === \"title\") {\n      setNewTitle(value); // update the newTitle state variable when the user edits the title\n    } else {\n      onUpdateNote({\n        ...activeNote,\n        [key]: value,\n        dateCreated: Date.now(),\n      });\n    }\n  };\n\n  return (\n    <div className=\"app-main\">\n      <div className=\"app-main-note-edit\">\n        <div className=\"cont-text\">\n          <div className=\"left-side\">\n            <input\n              type=\"text\"\n              id=\"title\"\n              value={newTitle} // use the newTitle state variable to render the title input field\n              onChange={(e) => onEdit(\"title\", e.target.value)}\n              autoFocus\n            />\n            <div className=\"date-note\">\n              <input\n                className=\"input-date\"\n                type=\"datetime-local\"\n                value={new Date(Date.now() - new Date().getTimezoneOffset() * 60000)\n                  .toISOString()\n                  .slice(0, -8)}\n                onChange={(e) => onEdit(\"dateCreated\", e.target.value)}\n              />\n            </div>\n          </div>\n          <div className=\"right-side\">\n            <div id=\"save\">\n              <p onClick={toggleEditMode}>{isEditing ? 'Save' : 'Edit'}</p>\n            </div>\n            <div id=\"delete\">\n              <p onClick={() => {\n                onDeleteNote(activeNote.id);\n                navigate('/');\n              }}>Delete</p>\n            </div>\n          </div>\n        </div>\n        {isEditing ? (\n          <ReactQuill\n            className=\"quill-editor\"\n            placeholder='Enter Your Note Here'\n            value={activeNote.body}\n            onChange={(value) => onEdit(\"body\", value)}\n            ref={quillRef}\n          />\n        ) : (\n          <p className=\"quill-content\">{activeNote.body && activeNote.body.replace(/<[^>]+>/g, '')}</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\n\nexport default Main;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}